{"version":3,"sources":["features/tezos/slice.tsx","features/tezos/selectors.tsx","features/marketplace/slice.tsx","features/marketplace/selectors.tsx","components/ConnectButton/index.tsx","components/DisconnectButton/index.tsx","components/Navbar.tsx","features/mintForm/slice.tsx","features/mintForm/selectors.tsx","libs/constants.tsx","components/ImageUpload/index.tsx","components/MintForm/index.tsx","pages/Mint.tsx","pages/Home.tsx","components/NftItem/index.tsx","pages/Marketplace.tsx","pages/Profile.tsx","pages/Nft.tsx","App.tsx","reportWebVitals.ts","app/store.tsx","index.tsx"],"names":["initialState","Tezos","TezosToolkit","contract","undefined","wallet","userAddress","userBalance","publicToken","beaconConnection","contractAddress","tezosSlice","createSlice","name","reducers","setTezos","state","action","payload","setContract","setWallet","setUserAddress","setUserBalance","setPublicToken","setBeaconConnection","actions","tezos","selectTezos","createSelector","selectWallet","selectUserAddress","selectBeaconConnection","storage","pinning","minting","marketplaceSlice","setStorage","setPinning","setMinting","mintForm","selectContract","selectPinning","selectMinting","ConnectButton","dispatch","useDispatch","useSelector","selectMktContract","useState","publicTkn","setPublicTkn","setup","a","tz","getBalance","balance","toNumber","connectWallet","requestPermissions","network","type","NetworkType","CUSTOM","rpcUrl","getPKH","console","log","useEffect","BeaconWallet","preferredNetwork","disableDefaultEvents","eventHandlers","BeaconEvent","PAIR_INIT","handler","defaultEventCallbacks","PAIR_SUCCESS","data","publicKey","setWalletProvider","client","getActiveAccount","onClick","className","buttonClass","DisconnectButton","disconnectWallet","tezosTK","removeAllAccounts","removeAllPeers","destroy","slice","Navbar","history","useHistory","src","push","title","description","file","mintFormSlice","setTitle","setDescription","setFile","selectTitle","selectDescription","selectFile","marketplaceContractAddress","energizeContractAddress","ImageUpload","image","setImage","upload","FormData","append","fetch","method","headers","body","response","json","status","msg","metadataHash","imageHash","at","mktContract","methods","mint","send","op","confirmation","uploadPhoto","reader","FileReader","onload","readyState","result","readAsDataURL","alt","hidden","id","accept","onChange","e","target","files","MintForm","htmlFor","labelClassName","textInputClass","placeholder","value","titleChange","descChange","Mint","Home","NftItem","tokenId","ownerAddress","nftMetadata","price","metadataIpfs","bytes2Char","metadata","setMetadata","Number","getMetadata","artifactUri","Marketplace","marketplaceNfts","setMarketplaceNfts","nftInfo","setNftInfo","res","res2","data2","map","nft","x","find","info","key","getStorage","length","Profile","userNfts","setUserNfts","useParams","user","filter","price_per_token","Nft","params","amount","setAmount","sellingPrice","setSellingPrice","setSmartWallet","setBalance","setMetadataIpfs","invTokens","decimals","address","energize","tokenContract","approve","approveMethod1","storageLimit","gasLimit","fee","approveOp","approveMethod2","approveOp2","energizeMethod","methodsObject","energizeWithInterest","nft_address","nft_id","token_id","setOnMarketplace","marketplaceContract","update_operators","add_operator","owner","operator","updateOperatorsMethod","updateOp","setOnMarketplaceMethod","set_on_market_place","token_amount","setOnMarketplaceOp","smartWlt","smartWalletObj","dt","children","smartWalletAddr","balObj","getWalletAddress","fetchMetadata","selected","energizeAmountChange","sellingPriceChange","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","tezosReducer","mintFormReducer","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a1a0e8c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { BeaconWallet } from '@taquito/beacon-wallet';\nimport { TezosToolkit } from '@taquito/taquito'\nimport { TezosAccountAddress, TezosContractAddress } from '../../types';\n\n\nexport type TezosState = {\n    Tezos: TezosToolkit,\n    contract: any,\n    wallet: BeaconWallet | null,\n    userAddress: TezosAccountAddress | undefined,\n    userBalance: number,\n    publicToken: string,\n    beaconConnection: boolean,\n    contractAddress: TezosContractAddress,\n}\nexport const initialState: TezosState = {\n    Tezos: new TezosToolkit(\"https://ghostnet.smartpy.io\"),\n    contract: undefined,\n    wallet: null,\n    userAddress: undefined,\n    userBalance: 0,\n    publicToken: \"\",\n    beaconConnection: false,\n    contractAddress: \"KT1Dqf7SEVMjJ8xNvWEuQmn2ffiWoFc9bkkZ\",\n}\n\nconst tezosSlice = createSlice({\n    name: 'tezos',\n    initialState: initialState,\n    reducers: {\n        setTezos: (state, action) => {\n            state.Tezos = action.payload;\n        },\n        setContract: (state, action) => {\n            state.contract = action.payload\n        },\n        setWallet: (state, action) => {\n            state.wallet = action.payload\n        },\n        setUserAddress: (state, action) => {\n            state.userAddress = action.payload\n        },\n        setUserBalance: (state, action) => {\n            state.userBalance = action.payload\n        },\n        setPublicToken: (state, action) => {\n            state.publicToken = action.payload\n        },\n        setBeaconConnection: (state, action) => {\n            state.beaconConnection = action.payload\n        },\n    }\n});\nexport const {\n    setTezos,\n    setContract,\n    setWallet,\n    setUserAddress,\n    setUserBalance,\n    setPublicToken,\n    setBeaconConnection,\n} = tezosSlice.actions;\n\nexport default tezosSlice.reducer;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"../../app/store\";\nimport { initialState } from \"./slice\";\n\nconst tezosSlice = (state: RootState) => state.tezos || initialState;\n\nexport const selectTezos = createSelector([tezosSlice], state => state.Tezos);\n\nexport const selectWallet = createSelector([tezosSlice], state => state.wallet);\n\nexport const selectUserAddress = createSelector([tezosSlice], state => state.userAddress);\n\nexport const selectUserBalance = createSelector([tezosSlice], state => state.userBalance);\n\nexport const selectBeaconConnection = createSelector([tezosSlice], state => state.beaconConnection);\n\nexport const selectPublicToken = createSelector([tezosSlice], state => state.publicToken);\n\nexport const selectContractAddress = createSelector([tezosSlice], state => state.contractAddress);","import { createSlice } from '@reduxjs/toolkit'\nimport { TezosContractAddress } from '../../types';\n\nexport type MarketplaceState = {\n  contract: TezosContractAddress,\n  storage: any,\n  pinning: boolean,\n  minting: boolean\n}\n\nexport const initialState: MarketplaceState = {\n  contract: \"KT1JUdFQk26him1fKFTiTZ9gVbkRNij8V2fZ\",\n  storage: null,\n  pinning: false,\n  minting: false\n}\n\nconst marketplaceSlice = createSlice({\n  name: 'marketplace',\n  initialState: initialState,\n  reducers: {\n    setStorage: (state, action) => {\n      state.storage = action.payload;\n    },\n    setPinning: (state, action) => {\n      state.pinning = action.payload;\n    },\n    setMinting: (state, action) => {\n      state.minting = action.payload;\n    },\n  }\n});\nexport const {\n  setStorage,\n  setMinting,\n  setPinning\n} = marketplaceSlice.actions\n\nexport default marketplaceSlice.reducer;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"../../app/store\";\nimport { initialState } from \"./slice\";\n\nconst marketplaceSlice = (state: RootState) => state.mintForm || initialState;\n\nexport const selectContract = createSelector([marketplaceSlice], (state: any) => state.contract);\n\nexport const selectStorage = createSelector([marketplaceSlice], (state: any) => state.storage);\n\nexport const selectPinning = createSelector([marketplaceSlice], (state: any) => state.pinning);\n\nexport const selectMinting = createSelector([marketplaceSlice], (state: any) => state.minting);","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  selectTezos,\n  selectWallet,\n} from \"../../features/tezos/selectors\";\nimport {\n  setUserAddress,\n  setUserBalance,\n  setBeaconConnection,\n  setWallet,\n  setPublicToken,\n} from \"../../features/tezos/slice\";\nimport {\n  BeaconEvent,\n  defaultEventCallbacks,\n  NetworkType,\n} from \"@airgap/beacon-sdk\";\nimport { selectContract as selectMktContract } from \"../../features/marketplace/selectors\";\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nimport {  TezosAccountAddress } from \"../../types\";\nimport { setStorage as setMktStorage } from \"../../features/marketplace/slice\";\n\nconst ConnectButton = (): JSX.Element => {\n  const dispatch = useDispatch();\n  const Tezos = useSelector(selectTezos);\n  const wallet = useSelector(selectWallet);\n  const mktContractAddress = useSelector(selectMktContract)\n\n  const [publicTkn, setPublicTkn] = useState<string | null>(\"\");\n\n  const setup = async (userAddress: TezosAccountAddress): Promise<void> => {\n    dispatch(setUserAddress(userAddress));\n\n    const balance = await Tezos.tz.getBalance(userAddress);\n\n    dispatch(setUserBalance(balance.toNumber()));\n\n    //const mktContract = await Tezos.wallet.at(mktContractAddress);\n    //const mktStorage: any = await mktContract.storage();\n    //dispatch(setMktStorage(mktStorage));\n  };\n\n  const connectWallet = async () => {\n    try {\n      await wallet?.requestPermissions({\n        network: {\n          type: NetworkType.CUSTOM,\n          rpcUrl: \"https://ithacanet.ecadinfra.com\",\n        },\n      });\n      const userAddress = await wallet?.getPKH() as TezosAccountAddress;\n      if (userAddress) {\n        await setup(userAddress);\n      }\n      dispatch(setBeaconConnection(true));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      const wallet = new BeaconWallet({\n        name: \"energize\",\n        preferredNetwork: NetworkType.CUSTOM,\n        disableDefaultEvents: true,\n        eventHandlers: {\n          [BeaconEvent.PAIR_INIT]: {\n            handler: defaultEventCallbacks.PAIR_INIT,\n          },\n          [BeaconEvent.PAIR_SUCCESS]: {\n            handler: (data) => setPublicTkn(data.publicKey),\n          },\n        },\n      });\n      Tezos.setWalletProvider(wallet);\n      dispatch(setWallet(wallet));\n\n      const activeAccount = await wallet.client.getActiveAccount();\n      if (activeAccount) {\n        const userAddress = await wallet.getPKH() as TezosAccountAddress;\n        await setup(userAddress);\n        dispatch(setBeaconConnection(true));\n      }\n    })();\n  }, []);\n\n  useEffect(() => {\n    dispatch(setPublicToken(publicTkn));\n  }, [setPublicTkn]);\n\n  return (\n        <button\n          onClick={connectWallet}\n          className={buttonClass}\n        >\n          Connect Wallet\n        </button>\n  );\n};\n\nexport default ConnectButton;\n\nlet buttonClass =\n  \" px-4 py-1 \" +\n  \" text-pink-400 \" +\n  \" rounded border-2 border-pink-400\" +\n  \" hover:text-black hover:bg-pink-400 hover:border-transparent\"","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectUserAddress, selectWallet, selectUserBalance } from \"../../features/tezos/selectors\";\nimport { setUserAddress, setUserBalance, setPublicToken, setWallet, setBeaconConnection, setTezos} from \"../../features/tezos/slice\";\nimport { TezosToolkit } from \"@taquito/taquito\";\n\nconst DisconnectButton = () => {\n\n    const dispatch = useDispatch();\n    const wallet = useSelector(selectWallet);\n    const userAddress = useSelector(selectUserAddress);\n    const disconnectWallet = async () => {\n\n        dispatch(setUserAddress(\"\"));\n        dispatch(setUserBalance(0));\n        dispatch(setWallet(null));\n        const tezosTK = new TezosToolkit(\"https://ithacanet.ecadinfra.com\");\n        dispatch(setTezos(tezosTK));\n        dispatch(setBeaconConnection(false));\n        dispatch(setPublicToken(null));\n        if (wallet) {\n            await wallet.client.removeAllAccounts();\n            await wallet.client.removeAllPeers();\n            await wallet.client.destroy();\n        }\n    }\n    return (\n        <div>\n            <button onClick={disconnectWallet} className={buttonClass}>\n                {`${userAddress?.slice(0,10)}.....`}\n            </button>\n        </div>\n    )\n}\n\nexport default DisconnectButton;\n\nlet buttonClass =\n  \" px-4 py-1 \" +\n  \" text-pink-400 \" +\n  \" rounded border-2 border-pink-400\" +\n  \" hover:text-black hover:bg-pink-400 hover:border-transparent\"","import ConnectButton from './ConnectButton';\nimport DisconnectButton from './DisconnectButton';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { selectBeaconConnection, selectUserAddress } from '../features/tezos/selectors';\nconst Navbar = () => {\n    const history = useHistory();\n    const beaconConnection = useSelector(selectBeaconConnection);\n    const userAddress = useSelector(selectUserAddress);\n    return (\n        <nav className={`flex justify-between bg-gray-800 p-6 font-Rampart`}>\n            <div className='w-12 h-12'>\n                <img src=\"./images/energize.png\"></img>\n            </div>\n            <div className='flex '>\n                <button className='p-2 text-indigo-50' onClick={() => history.push('/mint')}> Mint  |  </button> \n                <button className='p-2 text-indigo-50' onClick={() => history.push('/marketplace')}> Marketplace  | </button> \n                <button className='p-2 text-indigo-50' onClick={() => history.push(`/${userAddress}/tokens`)}> My Collection</button> \n            </div>\n            <div className='flex'>\n            {\n                beaconConnection ?\n                    <DisconnectButton />\n                    :\n                    <ConnectButton />\n            }\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import { createSlice } from '@reduxjs/toolkit'\nimport { BeaconWallet } from '@taquito/beacon-wallet';\n\nexport type TezosState = {\n  title: string,\n  description: string\n  file : any\n}\nexport const initialState: TezosState = {\n  title: \"\",\n  description: \"\",\n  file: null\n  //userProfile: null\n}\n\nconst mintFormSlice = createSlice({\n  name: 'mintForm',\n  initialState: initialState,\n  reducers: {\n    setTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    setDescription: (state, action) => {\n      state.description = action.payload;\n    },\n    setFile: (state, action) => {\n      state.file = action.payload;\n    },\n  }\n});\nexport const {\n  setTitle,\n  setDescription,\n  setFile\n  //setUserProfile\n} = mintFormSlice.actions;\n\nexport default mintFormSlice.reducer;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nimport { RootState } from \"../../app/store\";\nimport { initialState } from \"./slice\";\n\nconst mintFormSlice = (state: RootState) => state.mintForm || initialState;\n\nexport const selectTitle = createSelector([mintFormSlice], (state: any) => state.title);\nexport const selectDescription = createSelector([mintFormSlice], (state: any) => state.description);\nexport const selectFile = createSelector([mintFormSlice], (state: any) => state.file);\n","export const marketplaceContractAddress = \"KT1Kbscd5zyESkp5xQitK7aYAXj8DEGiFzgh\";\nexport const energizeContractAddress = \"KT1RDB7Q8jKgQnarhDaHJx9xUyakemMnUk73\";\nexport const marketplaceNftBigMap = \"160618\";","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { selectMinting, selectPinning } from \"../../features/marketplace/selectors\";\nimport { setMinting, setPinning } from \"../../features/marketplace/slice\";\nimport { selectDescription, selectFile, selectTitle } from \"../../features/mintForm/selectors\";\nimport { setFile } from \"../../features/mintForm/slice\";\nimport { selectTezos, selectUserAddress } from \"../../features/tezos/selectors\";\nimport { marketplaceContractAddress } from \"../../libs/constants\";\n\nexport const ImageUpload = () => {\n  const [image, setImage] = useState<any>(undefined);\n  const dispatch = useDispatch();\n  const file = useSelector(selectFile);\n  const title = useSelector(selectTitle);\n  const description = useSelector(selectDescription);\n  const userAddress = useSelector(selectUserAddress);\n  const pinning = useSelector(selectPinning);\n  const minting = useSelector(selectMinting);\n  const Tezos = useSelector(selectTezos);\n  const history = useHistory();\n\n  let upload = async () => {\n    try {\n      dispatch(setPinning(true));\n      const data = new FormData();\n      data.append(\"image\", file);\n      data.append(\"title\", title);\n      data.append(\"description\", description);\n      if (userAddress) {\n        data.append(\"creator\", userAddress);\n      }\n      console.log(userAddress);\n      console.log(file);\n      const response = await fetch(`https://energize-backend.herokuapp.com/mint`, {\n        method: \"POST\",\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        },\n        body: data\n      });\n\n      if (response) {\n        dispatch(setPinning(false));\n        const data = await response.json();\n        if (\n          data.status === true &&\n          data.msg.metadataHash &&\n          data.msg.imageHash\n        ) {\n          dispatch(setPinning(false));\n          dispatch(setMinting(true));\n          // mint here\n          const mktContract = await Tezos.wallet.at(marketplaceContractAddress);\n          try {\n            const op = await mktContract.methods\n              .mint('1', data.msg.metadataHash)\n              .send();\n            await op.confirmation();\n            history.push(`${userAddress}/tokens`)\n          } catch (e) {\n            console.log(e)\n          }\n          console.log(data);\n        } else {\n          throw \"No IPFS hash\";\n        }\n      } else {\n        throw \"No response\";\n      }\n    } catch (e) {\n      console.log(\"thisiserror\")\n      console.log(e);\n    } finally {\n      console.log('eh')\n      dispatch(setPinning(false));\n      dispatch(setMinting(true));\n    }\n  }\n\n  const uploadPhoto = async (file: any) => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        dispatch(setFile(file[0]));\n        setImage(reader.result);\n      }\n    }\n    console.log(file[0]);\n    reader.readAsDataURL(file[0]);\n  }\n\n  return (\n    <div className=\"flex flex-col w-1/2 p-2 align-middle justify-center \">\n      <div className=\"flex w-96 h-96 border-2 border-indigo-50 self-center justify-center \">\n        <img \n          src={image ? image : './images/placeholder_image.png'} \n          className={image ? \"\" : \"w-20 h-20  self-center\"}\n          alt=\"uploaded file\"\n        ></img>\n      </div>\n      <input\n        hidden\n        type=\"file\"\n        id=\"file\"\n        accept=\"image/png, image/jpeg, image/jpg\"\n        onChange={async (e) => await uploadPhoto(e.target.files)}\n      />\n      <button className={buttonClass} onClick={async () => { await upload() }}>Mint</button>\n    </div>\n  )\n}\n\nlet buttonClass =\n  \" flex m-4 px-4 py-1 blur-xl self-center\" +\n  \" text-pink-400 \" +\n  \" bg-gray-800 border-2 border-pink-400 \"\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectDescription, selectTitle } from \"../../features/mintForm/selectors\";\nimport { setDescription, setTitle } from \"../../features/mintForm/slice\";\n\nexport const MintForm = () => {\n  // title , description, creator\n\n  const dispatch = useDispatch();\n  const description = useSelector(selectDescription);\n  const title = useSelector(selectTitle);\n\n  const descChange = (e : any) => {\n    dispatch(setDescription(e.target.value));\n  }\n\n  const titleChange = (e : any) => {\n    dispatch(setTitle(e.target.value));\n  }\n  return (\n    <div className=\"flex flex-col w-1/2 ml-16 self-center items-center\">\n      <div className=\"flex w-full justify-between \" >\n        <label className=\"flex text-indigo-50 align-center ml-6 mt-6 \" htmlFor=\"upload\"> Choose a file jpeg/png accepted</label>\n        <button name=\"upload\" className={buttonClass}>\n          <label htmlFor=\"file\">\n            Choose File\n          </label>\n        </button>\n      </div>\n      <label htmlFor=\"title\" className={labelClassName}> Title </label>\n      <input type=\"text\" name=\"title\" className={textInputClass} placeholder=\"Max 500 characters\" value={title} onChange={e => titleChange(e)}></input>\n      <label htmlFor=\"description\" className={labelClassName}> Description </label>\n      <textarea name=\"description\" className={textInputClass} placeholder=\"Max 5000 characters\" value={description} onChange={e => descChange(e)}></textarea>\n    </div >\n  )\n}\n\nlet buttonClass =\n  \" flex m-4 px-4 py-1 self-end\" +\n  \" text-pink-400 \" +\n  \" bg-gray-800  border-2  border-pink-400 border-dotted\"\n\nlet textInputClass =\n  \"p-4 h-12 bg-gray-800 border-b-2 border-indigo-50 text-indigo-50 w-full\" +\n  \" focus:outline-none \"\n\nlet labelClassName =\n  \"text-indigo-50 ml-4 mt-8 self-start\"","import { ImageUpload } from \"../components/ImageUpload\";\nimport { MintForm } from \"../components/MintForm\";\nimport Navbar from \"../components/Navbar\";\n\n\nconst Mint = () => {\n  return (\n    <div>\n      <Navbar />\n      <div className=\"flex flex-row w-full -mt-16 h-screen bg-gray-800\">\n        <MintForm />\n        <ImageUpload />\n      </div>\n    </div>\n  )\n}\n\nexport default Mint;\n\n","import { useSelector } from \"react-redux\"\nimport Navbar from \"../components/Navbar\"\nimport { selectBeaconConnection } from \"../features/tezos/selectors\";\nimport Mint from \"./Mint\"\n\nexport const Home = () => {\n    const beaconConnection = useSelector(selectBeaconConnection);\n\n    return (\n        <div className=\"bg-gray-800 h-screen\">\n            {beaconConnection ?\n                <Mint />\n                :\n                <div className=\"flex flex-col\">\n                    <Navbar />\n                    <div className=\"text-4xl text-pink-400 self-center justify-self-center mt-56\">\n                        connect wallet to \n                    </div>``\n                    <div className=\"text-6xl text-pink-400 self-center justify-self-center\">\n                        energize\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectTezos } from \"../../features/tezos/selectors\";\nimport { marketplaceContractAddress } from \"../../libs/constants\"\nimport { TezosAccountAddress } from \"../../types\";\nimport { bytes2Char } from \"@taquito/utils\";\nimport { useHistory } from \"react-router-dom\";\n\ntype Props = {\n  tokenId: string,\n  ownerAddress?: string,\n  nftMetadata?: any,\n  price?: string\n}\n\nexport const NftItem = ({ tokenId, ownerAddress, nftMetadata, price }: Props) => {\n\n  const metadataIpfs = bytes2Char(nftMetadata?.value[1][\"\"]);\n  const [metadata, setMetadata] = useState<any>(undefined);\n  const history = useHistory();\n\n  useEffect(() => {\n    console.log(price)\n    console.log(Number(price) / 1000000)\n    async function getMetadata() {\n      try {\n        console.log(\"asdasd \", metadataIpfs)\n        console.log(metadataIpfs.slice(13))\n        const response = await fetch(`https://cloudflare-ipfs.com/ipfs/${metadataIpfs.slice(13)}`)\n        const metadata = await response.json();\n        console.log(metadata)\n        setMetadata(metadata);\n      } catch (e) {\n        console.log(\"err\", e);\n      }\n    }\n    getMetadata();\n  }, [])\n\n  return (\n    nftMetadata &&\n    <div className=\"w-1/3 m-2 mb-8\" onClick={() => history.push(`/${ownerAddress}/tokens/${tokenId}`)}>\n      <img src={`https://cloudflare-ipfs.com/ipfs/${metadata?.artifactUri.slice(7)}`} alt=\"nft\"></img>\n      <div className=\"flex flex-row text-indigo-50 justify-between\">\n        <div> {metadata?.name} </div>\n        {price ? \n          <div> {Number(price) / 1000000} tez </div>\n          :\n          <div> </div>\n        }\n      </div>\n    </div>\n  )\n}","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport { NftItem } from \"../components/NftItem\";\n\n\nlet nftInfo = [\n  {\n    \"key\": {\n      \"0\": \"1\",\n    },\n    \"hash\": \"exprupfsSCLsCAz2eSPx7SnCGY27yxX5JyMDj3cwzqGEj3XXR4dMA8\",\n    \"value\":\n      [\n        {\n          \"token_id\": \"1\",\n          \"\": \"697066733a2f2f516d555a69544c55384e527352776546357350684d3538586b323161334b634c6a774d5937534654676563684779\"\n        }\n      ]\n  }\n]\n\nlet x = [\n  {\n    \"key\": \"1\",\n    \"hash\": \"expru2dKqDfZG8hu4wNGkiyunvq2hdSKuVYtcKta7BWP6Q18oNxKjS\",\n    \"value\": {\n      \"0\": \"1\",\n      \"1\": {\n        \"\": \"050100000035697066733a2f2f516d555a69544c55384e527352776546357350684d3538586b323161334b634c6a774d5937534654676563684779\"\n      }\n    }\n  }\n]\n\nconst Marketplace = () => {\n\n  const history = useHistory();\n  const [marketplaceNfts, setMarketplaceNfts] = useState<any>([])\n  const [nftInfo, setNftInfo] = useState<any>([]);\n  useEffect(() => {\n    async function getStorage() {\n      try {\n        const apiMkt = \"https://api.ghost.tzstats.com/explorer/bigmap/161474/values\" // TODO make dynamic\n        const res = await fetch(apiMkt);\n        const data = await res.json();\n        const apiNftInfo = \"https://api.ghost.tzstats.com/explorer/bigmap/161477/values\" // TODO \n        const res2 = await fetch(apiNftInfo);\n        const data2 = await res2.json();\n        data.map((nft: any) => {\n          const x = data2.find((info: any) => {\n            return (info.key[0] === nft.key[0])\n          })\n          console.log(x);\n        })\n        setNftInfo(data2);\n        setMarketplaceNfts(data);\n      } catch (e) {\n        console.log(\"error\", e);\n      }\n    }\n    getStorage();\n  }, [])\n  return (\n    <div>\n      <Navbar />\n      <div className=\"flex flex-row w-full bg-gray-800 h-screen\" >\n        <div className=\"flex flex-col items-center w-full\">\n          {\n            marketplaceNfts.map((nft: any) => {\n              if (nft && nftInfo.length !== 0) {\n                return (\n                  <NftItem\n                    tokenId={nft.key[0]}\n                    ownerAddress={nft.key[1]}\n                    nftMetadata={nftInfo.find((info: any) => info.key[0] === nft.key[0])}\n                    price={nft.value[0]}\n                  />\n                )\n              } else {\n                return (\n                  <>no nfts</>\n                )\n              }\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Marketplace;\n\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport { NftItem } from \"../components/NftItem\";\nimport { selectTezos, selectUserAddress } from \"../features/tezos/selectors\";\nimport { marketplaceContractAddress } from \"../libs/constants\";\n\nlet marketplaceNfts = [\n  {\n    \"key\": {\n      \"0\": \"tz1XsBudQn7Xvn1msvmgDDNqBKeqRh5atuVW\",\n      \"1\": \"1\"\n    },\n    \"hash\": \"exprupfsSCLsCAz2eSPx7SnCGY27yxX5JyMDj3cwzqGEj3XXR4dMA8\",\n    \"value\":\n      [\n        {\n          \"price_per_token\": \"100000\",\n          \"timestamp\": \"2022-08-05T18:57:55Z\",\n          \"token_amount\": \"1\"\n        }\n      ]\n  },\n  {\n    \"key\": {\n      \"0\": \"tz1XsBudQn7Xvn1msvmgDDNqBKeqRh5atuVW\",\n      \"1\": \"1\"\n    },\n    \"hash\": \"exprupfsSCLsCAz2eSPx7SnCGY27yxX5JyMDj3cwzqGEj3XXR4dMA8\",\n    \"value\":\n      [\n        {\n          \"price_per_token\": \"100000\",\n          \"timestamp\": \"2022-08-05T18:57:55Z\",\n          \"token_amount\": \"1\"\n        }\n      ]\n  }\n]\nlet nftInfo = [\n  {\n    \"key\": {\n      \"0\": \"1\",\n    },\n    \"hash\": \"exprupfsSCLsCAz2eSPx7SnCGY27yxX5JyMDj3cwzqGEj3XXR4dMA8\",\n    \"value\":\n      [\n        {\n          \"token_id\": \"1\",\n          \"\": \"697066733a2f2f516d555a69544c55384e527352776546357350684d3538586b323161334b634c6a774d5937534654676563684779\"\n        }\n      ]\n  }\n]\n\nconst Profile = () => {\n  const [userNfts, setUserNfts] = useState<any>([]);\n  const [nftInfo, setNftInfo] = useState<any>([]);\n  const params: any = useParams();\n  const userAddress = params.user;\n  useEffect(() => {\n    async function getStorage() {\n      try {\n        const apiTokens = \"https://api.ghost.tzstats.com/explorer/bigmap/161473/values\" // TODO make dynamic\n        const res = await fetch(apiTokens);\n        const data = await res.json();\n        console.log(userAddress)\n        console.log(data.filter((nft: any) => nft.key[0] === userAddress));\n        setUserNfts(data.filter((nft: any) => nft.key[0] === userAddress));\n        const apiNftInfo = \"https://api.ghost.tzstats.com/explorer/bigmap/161477/values\" // TODO \n        const res2 = await fetch(apiNftInfo);\n        const data2 = await res2.json();\n        setNftInfo(data2);\n        console.log(data2)\n      } catch (e) {\n      }\n    }\n    getStorage();\n  }, [])\n  return (\n    <div>\n      <Navbar />\n      <div className=\"flex flex-row w-full bg-gray-800 h-\" >\n        <div className=\"flex flex-col items-center w-full\">\n          {\n            userNfts.map((nft: any) => {\n              if (nft && nftInfo.length !== 0) {\n                return (\n                  <NftItem\n                    tokenId={nft.key[1]}\n                    ownerAddress={nft.key[0]}\n                    nftMetadata={nftInfo.find((info:any) => info.key[0] === nft.key[1])}\n                    price={nft.value[0].price_per_token}\n                  />\n                )\n              } else {\n                return (\n                  <div>\n                    no nfts\n                  </div>\n                )\n              }\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile;\n\n","import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { bytes2Char } from \"@taquito/utils\";\nimport Navbar from \"../components/Navbar\";\nimport { useSelector } from \"react-redux\";\nimport { selectTezos } from \"../features/tezos/selectors\";\nimport { energizeContractAddress, marketplaceContractAddress } from \"./../libs/constants\";\n\ntype Props = {\n  tokenId: string,\n  userAddress: string\n}\n\nlet NftInfo = [\n  {\n    \"key\": {\n      \"0\": \"1\",\n    },\n    \"hash\": \"exprupfsSCLsCAz2eSPx7SnCGY27yxX5JyMDj3cwzqGEj3XXR4dMA8\",\n    \"value\":\n      [\n        {\n          \"token_id\": \"1\",\n          \"\": \"697066733a2f2f516d555a69544c55384e527352776546357350684d3538586b323161334b634c6a774d5937534654676563684779\"\n        }\n      ]\n  }\n]\n\nconst Nft = () => {\n  const params: any = useParams();\n  const [metadata, setMetadata] = useState<any>(undefined);\n  const [amount, setAmount] = useState<number>(0);\n  const [sellingPrice, setSellingPrice] = useState<number>(0);\n  const [nftInfo, setNftInfo] = useState<any>([]);\n  const [smartWallet, setSmartWallet] = useState<string>(\"\");\n  const [balance, setBalance] = useState<string>(\"\");\n  const [metadataIpfs, setMetadataIpfs] = useState<string>()\n  const Tezos = useSelector(selectTezos)\n\n  const invTokens = {\n    kUSD: {\n      decimals: \"18\",\n      address: \"KT1Wgp6qSsDN7mCaDk5XDEQU52MezE8B9mr5\"\n    }\n  }\n\n  const energizeAmountChange = (e: any) => {\n    setAmount(e.target.value);\n  }\n\n  const sellingPriceChange = (e: any) => {\n    setSellingPrice(e.target.value);\n  }\n  const energize = async () => {\n    // Approve Call \n    const tokenContract = await Tezos.wallet.at(invTokens.kUSD.address);\n    const approveMethod1 = await tokenContract.methods.approve(energizeContractAddress, 0);\n\n    const approveOp = await approveMethod1.send({\n      storageLimit: 2000,\n      gasLimit: 500000,\n      fee: 200000\n    });\n    await approveOp.confirmation(1);\n\n    const approveMethod2 = await tokenContract.methods.approve(energizeContractAddress, amount);\n\n    const approveOp2 = await approveMethod2.send({\n      storageLimit: 2000,\n      gasLimit: 500000,\n      fee: 200000\n    });\n    await approveOp2.confirmation(1);\n\n    const contract = await Tezos.wallet.at(energizeContractAddress);\n    const energizeMethod = contract.methodsObject.energizeWithInterest({\n      amount: amount,\n      nft_address: marketplaceContractAddress,\n      nft_id: params.tokenId,\n      token_id: 0 // TODO make dynamic\n    });\n    const op = await energizeMethod.send({\n      storageLimit: 2000, // TODO \n      gasLimit: 500000,\n      fee: 200000,\n    });\n\n    const confirmation = await op.confirmation(1);\n    //TODO update storage\n  }\n\n  const setOnMarketplace = async () => {\n    const marketplaceContract = await Tezos.wallet.at(marketplaceContractAddress);\n    const updateOperatorsMethod = await marketplaceContract.methods.update_operators([\n      {\n        add_operator: {\n          owner: params.user,\n          operator: marketplaceContractAddress,\n          token_id: params.tokenId\n        }\n      }\n    ])\n    const updateOp = await updateOperatorsMethod.send({\n      storageLimit: 2000,\n      gasLimit: 500000,\n      fee: 200000\n    });\n    const confirmation = await updateOp.confirmation(1);\n\n    const setOnMarketplaceMethod = marketplaceContract.methodsObject.set_on_market_place({\n      price_per_token: sellingPrice,\n      token_amount: \"1\",\n      token_id: params.tokenId\n    })\n    const setOnMarketplaceOp = await setOnMarketplaceMethod.send({\n      storageLimit: 2000,\n      gasLimit: 500000,\n      fee: 200000\n    });\n    const confirmation2 = await setOnMarketplaceOp.confirmation(1);\n  }\n\n  useEffect(() => {\n    let smartWlt = \"\";\n    async function getMetadata() {\n      try {\n        const apiNftInfo = \"https://api.ghost.tzstats.com/explorer/bigmap/161477/values\" // TODO \n        const res = await fetch(apiNftInfo);\n        const data = await res.json();\n        setNftInfo(data);\n        console.log(data);\n        const nftMetadata = data.find((info: any) => info.key === params.tokenId) // TODO make 1 dynamic usinng params\n        if (nftMetadata) {\n          setMetadataIpfs(bytes2Char(nftMetadata.value[1][\"\"]));\n        }\n      } catch (e) {\n        console.log(\"err\", e);\n      }\n    }\n    async function getWalletAddress() {\n\n      try {\n        const walletManagerStorageApi = \"https://api.better-call.dev/v1/bigmap/ghostnet/158634/keys\"\n        const res = await fetch(walletManagerStorageApi);\n        const data = await res.json();\n        const smartWalletObj = data.find((dt: any) =>\n          (dt.data.key.children[0].value === marketplaceContractAddress)\n          && (dt.data.key.children[1].value === params.tokenId)\n        )\n        console.log(smartWalletObj)\n        const smartWalletAddr = smartWalletObj.data.value.value\n        console.log(smartWalletAddr)\n        smartWlt = smartWalletAddr;\n        setSmartWallet(smartWalletAddr)\n      } catch (err) {\n        console.log(\"err\", err);\n      }\n    }\n    async function getBalance() {\n      try {\n        const yTokenBalApi = \"https://api.better-call.dev/v1/bigmap/ghostnet/122179/keys\";\n        const res = await fetch(yTokenBalApi);\n        const data = await res.json();\n        console.log(smartWlt, \"smartWallet\")\n        const balObj = data.find((dt: any) => dt.data.key.children[0].value === smartWlt)\n        console.log(\"balobj\", balObj)\n        const balance = balObj.data.value.value;\n        console.log(balance)\n        setBalance(balance);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    getMetadata();\n    getWalletAddress();\n    getBalance();\n  }, [])\n\n  useEffect(() => {\n\n    async function fetchMetadata() {\n      console.log(metadataIpfs)\n      try {\n        const response = await fetch(`https://cloudflare-ipfs.com/ipfs/${metadataIpfs?.slice(13)}`)\n        const metadata = await response.json();\n        setMetadata(metadata);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    fetchMetadata();\n  }, [metadataIpfs])\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"flex bg-gray-800 h-screen items-center -mt-12 \">\n        <div className=\"w-1/3 m-12 ml-48\">\n          <img\n            src={`https://cloudflare-ipfs.com/ipfs/${metadata?.artifactUri.slice(7)}`} alt=\"nft\"\n          />\n          <div className=\"text-pink-400 \">\n          kUSD - {Number(balance)/1000000000000000000}\n          </div>\n        </div>\n        <div className=\"m-12\">\n          <div className=\"m-2\">\n            <div className=\"text-gray-50 font-bold\">\n              Name\n            </div>\n            <div className=\"text-gray-50\">\n              {metadata?.name}\n            </div>\n          </div>\n          <div className=\"m-2\">\n            <div className=\"text-gray-50 font-bold\">\n              Description\n            </div>\n            <div className=\"text-gray-50\">\n              {metadata?.description}\n            </div>\n          </div>\n          <div className=\"m-2\">\n            <div className=\"text-gray-50 font-bold\">\n              Price\n            </div>\n            <div className=\"text-gray-50\">\n            </div>\n          </div>\n          <div className=\"m-2 mt-12 border-t-2 border-pink-400 pt-4 border-double\">\n            <div className=\"text-gray-50 mt-2\">\n              <select className=\"bg-gray-700 text-pink-400 border-2 border-pink-400 rounded \" >\n                <option selected> kUSD </option>\n              </select>\n              <input\n                type=\"text\"\n                name=\"title\"\n                className={textInputClass}\n                placeholder=\"Enter Amount\"\n                onChange={(e: any) => energizeAmountChange(e)}\n                value={amount}\n              />\n            </div>\n            <div className=\"text-gray-50 mb-8\">\n              <button className={buttonClass} onClick={energize}> Energize </button>\n            </div>\n\n\n            <div className=\"flex border-t-2 border-pink-400 pt-4 border-double\">\n              <div className=\"text-gray-50 font-bold \">\n                Selling Price\n              </div>\n              <input\n                type=\"text\"\n                name=\"title\"\n                className={textInputClass}\n                placeholder=\"Enter Amount\"\n                onChange={(e: any) => sellingPriceChange(e)}\n                value={sellingPrice}\n              ></input>\n            </div>\n            <div className=\"text-gray-50 mb-8\">\n              <button className={buttonClass} onClick={setOnMarketplace}> Set on Marketplace </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Nft;\n\nlet textInputClass =\n  \"bg-gray-800 border-b-2 border-pink-400 text-indigo-50 ml-4 w-36\" +\n  \" focus:outline-none \"\n\nlet buttonClass =\n  \" flex px-4 py-1 mt-8 blur-xl\" +\n  \"  text-pink-400 \" +\n  \" bg-gray-800  border-2 border-pink-400 border-dotted\" +\n  \" hover:text-black hover:bg-pink-400 hover:border-transparent\"","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Home } from './pages/Home';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Mint from './pages/Mint';\nimport Marketplace from './pages/Marketplace';\nimport Profile from './pages/Profile';\nimport Nft from './pages/Nft';\nfunction App() {\n  return (\n    <div className='font-Rampart text-4xl'>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/mint\" component={Mint} />\n          <Route path=\"/marketplace\" component={Marketplace} />\n          <Route exact path=\"/:user/tokens\" component={Profile} />\n          <Route path=\"/:user/tokens/:tokenId\" component={Nft} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    configureStore,\n    //getDefaultMiddleware,\n    combineReducers,\n} from \"@reduxjs/toolkit\";\nimport tezosReducer from \"../features/tezos/slice\";\nimport mintFormReducer from \"../features/mintForm/slice\"\n\nconst rootReducer = combineReducers({\n    tezos: tezosReducer,\n    mintForm: mintFormReducer,\n})\nexport const store = configureStore({\n    reducer: rootReducer,\n})\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}